{"version":3,"sources":["calendar/dateFunctions.js","calendar/Cal.js","calendar/utilities.js","calendar/index.js","index.js"],"names":["Months","Days","daysInMonth","month","year","Date","getDate","tMonth","getMonth","tYear","getFullYear","Cal","props","_props$targetMonth","targetMonth","DF","_props$targetYear","targetYear","_props$items","items","clickDay","clickEvent","clickThisDate","clickPrev","clickNext","_useState","useState","_useState2","Object","slicedToArray","eventInfo","updateEventInfo","_useState3","m","y","_useState4","dateInfo","updateDateInfo","changeMonth","dir","nMonth","oldDate","_objectSpread","nYear","old","new","tMonthDays","tMonthStart","getDay","toDate","td","keys","length","processedItems","forEach","it","prDate","date","rec","loopProtect","dateTarg","calcDate","end","newDate","split","map","d","parseInt","targ","checkDay","newItem","item","color","push","join","processItems","react_default","a","createElement","id","className","Fragment","onClick","weekDays","key","track","dayTrack","rootCal","toConsumableArray","count","filledArray","i","iterDate","concat","dt","thisDay","style","borderColor","e","stopPropagation","event","renderCalender","Calendar","StCal","styled","div","_templateObject","calendar_Cal","ReactDOM","render","margin","maxWidth","calendar","p","console","log","document","getElementById"],"mappings":"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","file":"static/js/main.4605c9ab.chunk.js","sourcesContent":["export const Months = [\r\n  \"Jan\",\r\n  \"Feb\",\r\n  \"March\",\r\n  \"April\",\r\n  \"May\",\r\n  \"June\",\r\n  \"July\",\r\n  \"Aug\",\r\n  \"Sep\",\r\n  \"Oct\",\r\n  \"Nov\",\r\n  \"Dec\"\r\n];\r\nexport const Days = [\"Sun\", \"Mon\", \"Tues\", \"Wed\", \"Thurs\", \"Fri\", \"Sat\"];\r\nexport const daysInMonth = (month, year) => new Date(year, month, 0).getDate();\r\nexport const monthStartOn = (month, year) =>\r\n  Days[new Date(year, month - 1, 1).getDay()];\r\nexport const tMonth = () => new Date().getMonth() + 1;\r\nexport const tYear = () => new Date().getFullYear();\r\n","import React, { useState } from \"react\";\r\nimport * as DF from \"./dateFunctions\";\r\nimport { filledArray } from \"./utilities\";\r\n\r\nconst Cal = (props) => {\r\n\r\n  const {\r\n    targetMonth = DF.tMonth(),\r\n    targetYear = DF.tYear(),\r\n    items = [],\r\n    clickDay,\r\n    clickEvent,\r\n    clickThisDate,\r\n    clickPrev, \r\n    clickNext\r\n  } = props;\r\n\r\n  const [eventInfo, updateEventInfo] = useState({});\r\n  const [dateInfo, updateDateInfo] = useState({\r\n    m: targetMonth,\r\n    y: targetYear\r\n  });\r\n\r\n  const processItems = () => {\r\n    let processedItems = {};\r\n    items.forEach(it => {\r\n      let prDate = new Date(it.date);\r\n      if (it.rec) {\r\n        let loopProtect = 0\r\n        let dateTarg = prDate\r\n        let calcDate = it.date\r\n        while (dateTarg <= new Date(it.end)) {\r\n          let newDate = calcDate.split(\"-\").map(d => parseInt(d))\r\n          if (!processedItems[newDate[2]]) processedItems[newDate[2]] = {};\r\n          let targ = processedItems[newDate[2]];\r\n          if (!targ[newDate[0]]) targ[newDate[0]] = {};\r\n          targ = targ[newDate[0]];\r\n          let checkDay = newDate[1]\r\n          if (checkDay > DF.daysInMonth(newDate[0], newDate[2])) checkDay = DF.daysInMonth(newDate[0], newDate[2])\r\n          if (!targ[checkDay]) targ[checkDay] = [];\r\n          const newItem = {\r\n            item: it.item,\r\n            color: it.color ? it.color : null\r\n          }\r\n          targ[checkDay].push(newItem);\r\n\r\n          if (it.rec === 'weekly') {\r\n            newDate[1] = newDate[1] + 7\r\n            if (newDate[1] > DF.daysInMonth(newDate[0], newDate[2])) {\r\n              newDate[1] = newDate[1] - DF.daysInMonth(newDate[0], newDate[2])\r\n              newDate[0]++\r\n              if (newDate[0] > 12) {\r\n                newDate[0] = 1\r\n                newDate[2]++\r\n              }\r\n            }\r\n          }\r\n          if (it.rec === 'biWeekly') {\r\n            newDate[1] = newDate[1] + 14\r\n            if (newDate[1] > DF.daysInMonth(newDate[0], newDate[2])) {\r\n              newDate[1] = newDate[1] - DF.daysInMonth(newDate[0], newDate[2])\r\n              newDate[0]++\r\n              if (newDate[0] > 12) {\r\n                newDate[0] = 1\r\n                newDate[2]++\r\n              }\r\n            }\r\n          }\r\n\r\n          if (it.rec === 'monthly') {\r\n            newDate[0]++\r\n            if (newDate[0] > 12) {\r\n              newDate[0] = 1\r\n              newDate[2]++\r\n            }\r\n          }\r\n          if (it.rec === 'yearly') newDate[2]++\r\n\r\n          calcDate = newDate.join('-')\r\n          dateTarg = new Date(calcDate)\r\n          loopProtect++;\r\n          if (loopProtect === 1000) break\r\n        }\r\n      } else {\r\n        // Single date items\r\n        if (!processedItems[prDate.getFullYear()]) processedItems[prDate.getFullYear()] = {};\r\n        let targ = processedItems[prDate.getFullYear()];\r\n        if (!targ[prDate.getMonth() + 1]) targ[prDate.getMonth() + 1] = {};\r\n        targ = targ[prDate.getMonth() + 1];\r\n        if (!targ[prDate.getDate()]) targ[prDate.getDate()] = [];\r\n        const newItem = {\r\n          item: it.item,\r\n          color: it.color ? it.color : null\r\n        }\r\n        targ[prDate.getDate()].push(newItem);\r\n      }\r\n\r\n    });\r\n    updateEventInfo(processedItems);\r\n  };\r\n\r\n  const changeMonth = dir => {\r\n    let nMonth = dateInfo.m;\r\n    let oldDate = {...dateInfo}\r\n    nMonth = dir === \"next\" ? nMonth + 1 : nMonth - 1;\r\n    let nYear = dateInfo.y;\r\n    if (nMonth > 12) {\r\n      nMonth = 1;\r\n      nYear = nYear + 1;\r\n    }\r\n    if (nMonth < 1) {\r\n      nMonth = 12;\r\n      nYear = nYear - 1;\r\n    }\r\n\r\n    if(dir ==='next' && clickNext) clickNext({ old: oldDate, new: {\r\n      m: nMonth,\r\n      y: nYear\r\n    }})\r\n    if(dir ==='prev' && clickPrev) clickNext({ old: oldDate, new: {\r\n      m: nMonth,\r\n      y: nYear\r\n    }})\r\n\r\n    updateDateInfo({\r\n      m: nMonth,\r\n      y: nYear\r\n    });\r\n  };\r\n  const tMonthDays = DF.daysInMonth(dateInfo.m, dateInfo.y);\r\n  const tMonthStart = DF.monthStartOn(dateInfo.m, dateInfo.y);\r\n  const toDate = new Date();\r\n  const td =\r\n    toDate.getMonth() + 1 + \"-\" + toDate.getDate() + \"-\" + toDate.getFullYear();\r\n\r\n  const renderCalender = () => {\r\n    let weekDays = DF.Days.map(d => (\r\n      <span key={d} className=\"weekDay\">\r\n        <p>{d}</p>\r\n      </span>\r\n    ));\r\n    let track = false;\r\n    let dayTrack = 1;\r\n    const maxDays = [...filledArray(42)];\r\n    const rootCal = maxDays.map((d, i) => {\r\n      let iterDate = `${dateInfo.m}-${dayTrack}-${dateInfo.y}`;\r\n      let dt = dayTrack;\r\n      track = (track || tMonthStart === DF.Days[i]) && dayTrack <= tMonthDays;\r\n      const thisDay = (\r\n        <span\r\n          key={i}\r\n          className={`${track && \"days\"} ${iterDate === td && \"today\"}`}\r\n          onClick={() => clickDay && clickDay({ ...dateInfo, d: dt })}\r\n        >\r\n          {track && dayTrack <= tMonthDays && (\r\n            <p className=\"dayNum\">{dayTrack}</p>\r\n          )}\r\n          {track && eventInfo &&\r\n            eventInfo[dateInfo.y] &&\r\n            eventInfo[dateInfo.y][dateInfo.m] &&\r\n            eventInfo[dateInfo.y][dateInfo.m][dayTrack] &&\r\n            eventInfo[dateInfo.y][dateInfo.m][dayTrack].map((d, i) => {\r\n              let dt = dayTrack\r\n              return (\r\n                <p\r\n                  key={i}\r\n                  className=\"eventItem\"\r\n                  style={{ borderColor: d.color ? d.color : null }}\r\n                  onClick={\r\n                    e => {\r\n                      e.stopPropagation();\r\n                      clickEvent && clickEvent({ event: d.item, ...dateInfo, d: dt })\r\n                    }\r\n                  }>\r\n                  {d.item}\r\n                </p>)\r\n            })}\r\n        </span>\r\n      );\r\n      track && dayTrack++;\r\n      return thisDay;\r\n    });\r\n    return (\r\n      <>\r\n        {weekDays}\r\n        {rootCal}\r\n      </>\r\n    );\r\n  };\r\n  \r\n  Object.keys(eventInfo).length < 1 && processItems(); \r\n  \r\n  return (\r\n      <div id='calendar'>\r\n        <div className='cal-controls'>\r\n          <div className='dayMonth'>{DF.Months[dateInfo.m - 1]} - {dateInfo.y}</div>\r\n          <div>\r\n            {((dateInfo.y !== 2019) || (dateInfo.m !== 11)) && <><button onClick={() => {\r\n              clickThisDate && clickThisDate({new: { m: DF.tMonth(), y: DF.tYear() }, old: dateInfo})\r\n              updateDateInfo({ m: DF.tMonth(), y: DF.tYear() })\r\n            }}>This date</button>&nbsp;&nbsp;| </>}\r\n            <button onClick={() => changeMonth(\"prev\")}>Prev Month</button>\r\n            <button onClick={() => changeMonth(\"next\")}>Next Month</button>\r\n          </div>\r\n        </div>\r\n        <div className='allDays'>\r\n          {renderCalender()}\r\n        </div>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default Cal;\r\n","export const filledArray = count => {\r\n  let filledArray = [];\r\n  for (let i = 0; i < count; i++) {\r\n    filledArray.push(\"\");\r\n  }\r\n  return filledArray;\r\n};\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Cal from './Cal'\r\n\r\nconst Calendar = (props) => {\r\n    const StCal = styled.div`\r\n        font-family: sans-serif;\r\n        #calendar{ \r\n            margin: 0 auto;\r\n            span {\r\n                width: calc(100% / 7);\r\n                display: block;\r\n                font-weight: bold;\r\n                color: #fff;\r\n                height: 100px;\r\n                margin: 0;\r\n                padding: 0;\r\n                padding-top: 25px;\r\n                overflow: hidden;\r\n                position: relative;\r\n                background-color: rgb(212, 212, 212);\r\n            }\r\n            .allDays{\r\n                display: flex;\r\n                flex-wrap: wrap;\r\n            }\r\n            .weekDay {\r\n                height: 30px;\r\n                padding: 0;\r\n                text-align: center;\r\n                background-color: rgb(60, 118, 241);\r\n                padding-bottom: 12px;\r\n            }\r\n            .days {\r\n                background-color: white;\r\n                box-shadow: 0 0 2px #999;\r\n                &.today {\r\n                    background-color: rgb(212, 255, 221);\r\n                    box-shadow: inset 0 0 210px rgb(141, 248, 141);\r\n                }\r\n                .dayNum {\r\n                    font-size: 0.9rem;\r\n                    position: absolute;\r\n                    top: 5px;\r\n                    right: 5px;\r\n                    padding: 0;\r\n                    margin: 0;\r\n                    color: #333;\r\n                }\r\n                &:hover{\r\n                    background-color: #e8e8e8;\r\n                    box-shadow: none;\r\n                    overflow-y: auto;\r\n                    overflow-x: hidden;\r\n                }\r\n                .eventItem {\r\n                    width: 20%;\r\n                    margin: 3px auto;\r\n                    width: 92%;\r\n                    display: block;\r\n                    padding: 3px 4px;\r\n                    color: #999;\r\n                    font-weight: normal;\r\n                    border-left: 3px solid hotpink;\r\n                    cursor: pointer;\r\n                    &:hover{\r\n                        background-color: darkgray;\r\n                        color: #fff;\r\n                    }\r\n                } \r\n            }\r\n            .cal-controls{\r\n                display: flex;\r\n                padding: 10px;\r\n                justify-content: space-between; \r\n                button{\r\n                    border: 2px solid green;\r\n                    background: none;\r\n                    padding: 5px 10px;\r\n                    margin-left: 7px;\r\n                    border-radius: 8px;\r\n                    color: green;\r\n                    cursor: pointer;\r\n                    &:hover{\r\n                        border: 2px solid gray;\r\n                        background: gray;\r\n                        color: #fff;\r\n                    }\r\n                }\r\n                .dayMonth{\r\n                    font-size: 1.3rem;\r\n                    font-weight: bold;\r\n                    color: #b1b1b1;\r\n                    padding-top: 5px;\r\n                } \r\n            } \r\n        }\r\n    `\r\n    return <StCal><Cal {...props} /></StCal>\r\n}\r\n\r\nexport default Calendar","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"normalize.css\";\r\nimport Calendar from \"./calendar\";\r\n\r\nconst items = [\r\n    { item: \"item 1\", date: \"11-21-2019\" },\r\n    { item: \"item 2\", date: \"1-15-2020\", end: \"5-15-2020\", rec: 'monthly' },\r\n    { item: \"item 3\", date: \"11-31-2017\", end: \"5-31-2025\", rec: 'yearly' },\r\n    { item: \"item 4\", date: \"11-31-2017\", end: \"5-31-2025\", rec: 'weekly' },\r\n    { item: \"item 5\", date: \"11-31-2017\", end: \"5-31-2025\", rec: 'biWeekly' },\r\n    { item: \"item 6\", date: \"11-31-2017\", end: \"5-31-2025\", rec: 'biWeekly', color: 'green' }\r\n  ] \r\n\r\nReactDOM.render(\r\n  <div style={{margin: '0 auto', maxWidth: '1000px'}}>\r\n    <Calendar \r\n      items={items}\r\n      clickDay={p => console.log(p)}\r\n      clickEvent={p => console.log(p)}\r\n      clickThisDate={p => console.log(p)}\r\n      clickPrev={p => console.log(p)} \r\n      clickNext={p => console.log(p)}\r\n    />\r\n  </div>\r\n  , document.getElementById(\"root\"));"],"sourceRoot":""}